[{"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/index.js":"1","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/App.js":"2","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/components/PostMessages.js":"3","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/actions/store.js":"4","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/reducers/index.js":"5","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/reducers/postMessage.js":"6","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/actions/postMessage.js":"7","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/actions/api.js":"8","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/components/PostMessageForm.js":"9","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/components/useForm.js":"10"},{"size":219,"mtime":1611831947202,"results":"11","hashOfConfig":"12"},{"size":605,"mtime":1611940364778,"results":"13","hashOfConfig":"12"},{"size":1688,"mtime":1611941702831,"results":"14","hashOfConfig":"12"},{"size":410,"mtime":1611930048294,"results":"15","hashOfConfig":"12"},{"size":179,"mtime":1611926542011,"results":"16","hashOfConfig":"12"},{"size":768,"mtime":1611955035098,"results":"17","hashOfConfig":"12"},{"size":1242,"mtime":1611954848282,"results":"18","hashOfConfig":"12"},{"size":425,"mtime":1611929300161,"results":"19","hashOfConfig":"12"},{"size":2075,"mtime":1611953850012,"results":"20","hashOfConfig":"12"},{"size":464,"mtime":1611953229371,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pv0hnk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/index.js",[],["45","46"],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/App.js",[],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/components/PostMessages.js",["47","48","49"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport * as actions from \"../actions/postMessage\";\nimport {\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PostMessagesForm from \"./PostMessageForm\";\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(3),\n    // 3 * 8px\n    padding: theme.spacing(2),\n  },\n});\n\nconst PostMessages = ({ classes, ...props }) => {\n  const [x, setX] = useState(0);\n\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid item xs={5}>\n        <Paper className={classes.paper}>\n          <PostMessagesForm></PostMessagesForm>\n        </Paper>\n      </Grid>\n      <Grid item xs={7}>\n        <Paper className={classes.paper}>\n          <List>\n            {props.postMessageList.map((record, index) => {\n              return (\n                <Fragment key={index}>\n                  <ListItem>\n                    <ListItemText>\n                      <Typography variant=\"h5\">{record.title}</Typography>\n                      <div>{record.message}</div>\n                    </ListItemText>\n                  </ListItem>\n                  <Divider component=\"li\"></Divider>\n                </Fragment>\n              );\n            })}\n          </List>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStatetoProps = (state) => ({\n  postMessageList: state.postMessage.list,\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n};\n\nexport default connect(\n  mapStatetoProps,\n  mapActionToProps\n)(withStyles(styles)(PostMessages));\n","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/actions/store.js",[],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/reducers/index.js",[],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/reducers/postMessage.js",[],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/actions/postMessage.js",[],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/actions/api.js",["50"],"import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:4000/\";\n\nexport default {\n  postMessage(url = baseUrl + \"postmessages/\") {\n    return {\n      fetchAll: () => axios.get(url),\n      fetchById: (id) => axios.get(url + id),\n      create: (newRecord) => axios.post(url, newRecord),\n      update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\n      delete: (id) => axios.delete(url + id),\n    };\n  },\n};\n","/home/ram/Bureau/CRUD MERN/client/mern_crud/src/components/PostMessageForm.js",["51","52","53","54"],"/home/ram/Bureau/CRUD MERN/client/mern_crud/src/components/useForm.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":25,"column":10,"nodeType":"63","messageId":"64","endLine":25,"endColumn":11},{"ruleId":"61","severity":1,"message":"65","line":25,"column":13,"nodeType":"63","messageId":"64","endLine":25,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":29,"column":6,"nodeType":"68","endLine":29,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":5,"column":1,"nodeType":"72","endLine":15,"endColumn":3},{"ruleId":"61","severity":1,"message":"73","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"74","line":1,"column":28,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":35,"column":47,"nodeType":"77","messageId":"78","endLine":35,"endColumn":49},{"ruleId":"61","severity":1,"message":"79","line":38,"column":17,"nodeType":"63","messageId":"64","endLine":38,"endColumn":26},{"ruleId":"61","severity":1,"message":"80","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"73","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'x' is assigned a value but never used.","Identifier","unusedVar","'setX' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["83"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setValues' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [props]",{"range":"86","text":"87"},[601,603],"[props]"]